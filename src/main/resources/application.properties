#设置访问端口号
server.port= 9000

###数据库信息配置
#数据库驱动类
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#数据库连接
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/drinkonlinemall?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&useSSL=true
#数据库用户名
spring.datasource.username=root
#数据库用户密码
spring.datasource.password=root

#连接池类型，druid连接池springboot暂无法默认支持，需要自己配置bean
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#连接池初始化连接数量
spring.datasource.initialSize=5
#连接池最大活跃连接数
spring.datasource.maxActive=100
#最小空闲数
spring.datasource.min-idle=5
#最大等待时间
spring.datasource.max-wait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis: 300000
#连接是否有效的查询语句
spring.datasource.validationQuery: SELECT 1 FROM DUAL
spring.datasource.testWhileIdle: true
spring.datasource.testOnBorrow: false
spring.datasource.testOnReturn: false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements: true
spring.datasource.maxPoolPreparedStatementPerConnectionSize: 50
spring.datasource.removeAbandoned: true
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
#druid数据库连接池支持多种日志框架，此处我们使用的是slf4j,因此druid连接池同样要改为slf4j
spring.datasource.filters: stat,wall,slf4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat:true
# SQL监控后台登录用户名
spring.datasources.druidLoginName=admin
# SQL监控后台登录用户密码
spring.datasources.druidPassword=admin

#mybatis配置类
mybatis.config-location=classpath:/mapperconfig/mybatis-config.xml
#sql文件配置
#mybatis.mapper-locations=classpath:/mappers/*Mapper.xml
mybatis.mapper-locations= classpath:/mappers/*Mapper.xml
#实体类设置别名
mybatis.type-aliases-package=com.zyt/entity/*

#日志配置
logging.config=classpath:log/log4j2.xml

# redis
########################################################
###REDIS (RedisProperties) redis基本配置
########################################################
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器IP
spring.redis.host=127.0.0.1
# Redis密码（默认为空）
spring.redis.password=
# Redis端口号
spring.redis.port=6379
# 连接超时时间 单位 ms（毫秒）
spring.redis.timeout=3000
########################################################
###REDIS (RedisProperties) redis线程池设置
########################################################
# 控制一个pool最多有多少个状态为idle(空闲的)的jedis实例，默认值也是8。
spring.redis.jedis.pool.max-idle=8
# 控制一个pool最少有多少个状态为idle(空闲的)的jedis实例，默认值也是0。
spring.redis.jedis.pool.min-idle=2
# 如果赋值为-1，则表示不限制；如果pool已经分配了maxActive个jedis实例，则此时pool的状态为exhausted(耗尽)。
spring.redis.jedis.pool.max-active=20
# 等待可用连接的最大时间，单位毫秒，默认值为-1，表示永不超时。如果超过等待时间，则直接抛出JedisConnectionException
spring.redis.jedis.pool.max-wait=3000
#默认生命周期30天（单位：s秒）
spring.redis.defaultExpiration=2592000
#服务器上下文路径
spring.redis.contextPath=contextPath

#文件保存路径
prop.upload-folder:D:\\workplace\\Inteill Idea_workplace\\online_drink_mall\\src\\main\\resources\\static\\

spring.servlet.multipart.max-file-size= 50MB
spring.servlet.multipart.max-request-size= 50MB


#网站缓存信息保存类型
spring.session.store-type=redis
#设置超时时间
server.servlet.session.timeout=30m


#####配置rabbitmq相关配置信息#######
#主机号
spring.rabbitmq.host= 192.168.10.131
#端口号
spring.rabbitmq.port= 5672
#虚拟主机地址
spring.rabbitmq.virtual-host= /
#开启发送端确认
#spring.rabbitmq.publisher-confirms=true
spring.rabbitmq.publisher-confirm-type=correlated
#只要抵达队列 以异步优先的方式回调
spring.rabbitmq.publisher-returns=true
#手动ack消息
spring.rabbitmq.listener.simple.acknowledge-mode=manual

#########日期格式化#############
spring.mvc.format.date-time=yyyy-MM-dd HH:mm:ss




